apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.sjd753'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {

        minSdkVersion 21
        targetSdkVersion 29
        versionCode 55
        versionName "2.5.5"
        // for library module VERSION_CODE and VERSION_NAME has to be set manually
        buildConfigField 'int', 'VERSION_CODE', "55"
        buildConfigField 'String', 'VERSION_NAME', "\"2.5.5\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // https://www.tensorflow.org/lite/guide/android#use_the_tensorflow_lite_aar_from_jcenter
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    aaptOptions {
        noCompress "tflite"
        noCompress "lite"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    // opencv
    implementation project(path: ':sdk')
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // tensorflow lite
    api 'org.tensorflow:tensorflow-lite:0.0.0-nightly'
    // This dependency adds the necessary TF op support.
    api 'org.tensorflow:tensorflow-lite-select-tf-ops:0.0.0-nightly'
    // The GPU delegate library is optional. Depend on it as needed.
    api 'org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly'
    api 'org.tensorflow:tensorflow-lite-support:0.0.0-nightly'
    // google cameraX dependencies
    def camerax_version = "1.0.0-beta12"
    // CameraX core library using camera2 implementation
    api "androidx.camera:camera-camera2:$camerax_version"
    // CameraX Lifecycle Library
    api "androidx.camera:camera-lifecycle:$camerax_version"
    // CameraX View class
    api "androidx.camera:camera-view:1.0.0-alpha19"
    // exif interface
    api 'androidx.exifinterface:exifinterface:1.3.1'
    // permission manager
    implementation 'com.github.buchandersenn:android-permission-manager:1.0.0'
    // glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
}


/*project.afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId 'com.github.sjd753'
                //You can either define these here or get them from project conf elsewhere
                artifactId 'lens'
                version '2.4.3'
                artifact "$buildDir/outputs/aar/app-release.aar" //aar artifact you want to publish

                //generate pom nodes for dependencies
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each { dependency ->
                        if (dependency.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', dependency.group)
                            dependencyNode.appendNode('artifactId', dependency.name)
                            dependencyNode.appendNode('version', dependency.version)
                        }
                    }
                }
            }
        }
        //publish to filesystem repo
        repositories {
            maven {
                url "$buildDir/repo"
            }
        }
    }
}*/



task createPom {
    pom {
        project {
            groupId 'com.github.sjd753'
            //You can either define these here or get them from project conf elsewhere
            artifactId 'lens'
            version '2.4.7'

            inceptionYear '2021'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            dependencies {
                dependency {
                    groupId 'androidx.camera'
                    artifactId 'camera-camera2'
                    version '1.0.0-beta12'
                }
                dependency {
                    groupId 'androidx.camera'
                    artifactId 'camera-lifecycle'
                    version '1.0.0-beta12'
                }
                dependency {
                    groupId 'androidx.camera'
                    artifactId 'camera-view'
                    version '1.0.0-alpha19'
                }
                dependency {
                    groupId 'androidx.exifinterface'
                    artifactId 'exifinterface'
                    version '1.3.1'
                }
            }
        }
    }.writeTo("pom.xml")
}

//task copyLibs(type: Copy) {
//    from configurations.api
//    into 'libs'
//}
